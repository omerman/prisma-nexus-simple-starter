### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  id: Int!
  info: String!
  post: Post!
  postId: Int!
}

input CommentCreateInput {
  info: String!
  post: PostCreateOneWithoutCommentsInput!
}

input CommentCreateManyWithoutPostInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  create: [CommentCreateWithoutPostInput!]
}

input CommentCreateOrConnectWithoutpostInput {
  create: CommentCreateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutPostInput {
  info: String!
}

input CommentWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneComment(data: CommentCreateInput!): Comment!
  createOnePost(data: PostCreateInput!): Post!
}

type Post {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  id: Int!
  title: String!
}

input PostCreateInput {
  comments: CommentCreateManyWithoutPostInput
  title: String!
}

input PostCreateOneWithoutCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  create: PostCreateWithoutCommentsInput
}

input PostCreateOrConnectWithoutcommentsInput {
  create: PostCreateWithoutCommentsInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutCommentsInput {
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
}
